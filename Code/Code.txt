#include <LiquidCrystal.h>  
#include <SoftwareSerial.h>  
  
LiquidCrystal lcd(A0, A1, A2, A3, A4, A5);//rs, en, d4, d5, d6, d7  
  
  
  
const int trigPin = 8; const int echoPin = 9;  
  
const int trigPin2 = 2;  
const int echoPin2 = 3;  
  
const int BUZZER = 7;  
  
long duration; int distance;  
  
long duration2;  
int distance2;  
  
void setup()  {  
pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output pinMode(echoPin, INPUT); 
// Sets the echoPin as an Input  
  
pinMode(trigPin2, OUTPUT); // Sets the trigPin as an Output  
pinMode(echoPin2, INPUT); // Sets the echoPin as an Input  
  
  
pinMode(BUZZER, OUTPUT);  
  
digitalWrite(BUZZER, HIGH);  
  
Serial.begin(9600); // Starts the serial communication  
  
  
  
lcd.begin(16, 2); lcd.print("LIFE SAVER BY ");  
lcd.setCursor(0, 1); lcd.print("LIDAR & USONIC");  
delay(3000);  
lcd.clear();   
  
  
lcd.setCursor(0, 0); lcd.print("LIDAR:"); lcd.setCursor(0, 1); lcd.print("USONIC:");  
  
30 
 
}  
  
void loop()  
{  
Serial.print("Distance: "); Serial.println(Check_Distance()); lcd.setCursor(7, 1); 
lcd.print(distance); delay(500); lcd.setCursor(7, 1); lcd.print("    ");  
  
  
  
Serial.println(Check_Distance2()); lcd.setCursor(6, 0); lcd.print(distance2); delay(500); 
lcd.setCursor(6, 0); lcd.print("    ");  
}  
  
  
int Check_Distance() { digitalWrite(trigPin, LOW); delayMicroseconds(2);  
  
digitalWrite(trigPin, HIGH); delayMicroseconds(10); digitalWrite(trigPin, LOW);  
  
duration = pulseIn(echoPin, HIGH);  
  
distance= duration*0.034/2;  
  
if(distance<50)  
{  
digitalWrite(BUZZER, LOW); delay(300);  
digitalWrite(BUZZER, HIGH);  
} return distance;  
}  
  
int Check_Distance2() { digitalWrite(trigPin2, LOW); delayMicroseconds(2); 
digitalWrite(trigPin2, HIGH); delayMicroseconds(10); digitalWrite(trigPin2, LOW);  
  
duration2 = pulseIn(echoPin2, HIGH);  
  
distance2= duration2*0.034/2;  
  
if(distance2<50)  
{  
digitalWrite(BUZZER, LOW); delay(100); digitalWrite(BUZZER, HIGH); delay(100); 
digitalWrite(BUZZER, LOW); delay(100);  
digitalWrite(BUZZER, HIGH);  
  
} return distance2;  
}  